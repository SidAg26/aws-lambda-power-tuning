{
  "Comment": "This workflow profiles functions with different inputs to determine best input-based configuration",
  "StartAt": "createVersionAlias",
  "States": {
    "createVersionAlias": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:ap-southeast-2:030103857128:function:createFunctionVersions:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "checkStepSize"
    },
    "checkStepSize": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.Payload.payload.stepSize",
            "IsPresent": true
          },
          "Next": "InputMapper"
        }
      ],
      "Default": "preProcessCreateInputList"
    },
    "InputMapper": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "executeVersionAlias",
        "States": {
          "executeVersionAlias": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "arn:aws:lambda:ap-southeast-2:030103857128:function:executeFunctions:$LATEST"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 3,
                "BackoffRate": 2
              }
            ],
            "End": true,
            "ResultSelector": {
              "responseList.$": "$.Payload"
            }
          }
        }
      },
      "Next": "DeleteVersions",
      "ItemsPath": "$.Payload.payload.inputList",
      "ItemSelector": {
        "lambdaARN.$": "$.Payload.lambdaARN",
        "num.$": "$.Payload.num",
        "value.$": "$$.Map.Item.Value"
      },
      "ResultPath": "$.outputList"
    },
    "preProcessCreateInputList": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:ap-southeast-2:030103857128:function:preProcessInputList:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "InputMapper",
      "InputPath": "$.Payload",
      "ResultSelector": {
        "inputList.$": "$.Payload"
      },
      "ResultPath": "$.Payload.payload"
    },
    "DeleteVersions": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "cleanUpVersionAlias",
        "States": {
          "cleanUpVersionAlias": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "arn:aws:lambda:ap-southeast-2:030103857128:function:cleanFunctionVersions:$LATEST"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 3,
                "BackoffRate": 2
              }
            ],
            "End": true
          }
        }
      },
      "End": true,
      "ItemSelector": {
        "lambdaARN.$": "$.Payload.lambdaARN",
        "value.$": "$$.Map.Item.Value"
      },
      "ItemsPath": "$.Payload.powerValues"
    }
  }
}